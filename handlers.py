from aiogram import Router, F
from aiogram.types import (
    Message,
    InlineKeyboardMarkup, InlineKeyboardButton,
)
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import Command
from admin import AddProduct
from admin import load_products 
from admin import load_sales
from aiogram.fsm.context import FSMContext
import config
import kb

router = Router()


@router.message(Command("start"))
async def start_handler(msg: Message) -> None:
    await msg.answer(
        "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ TacoSquad ‚Äî –±—Ä–µ–Ω–¥–æ–≤–∞—è –æ–¥–µ–∂–¥–∞ —Å –±—ã—Å—Ç—Ä–æ–π –¥–æ—Å—Ç–∞–≤–∫–æ–π.\n"
        "–í—ã–±–∏—Ä–∞–π –¥–µ–π—Å—Ç–≤–∏–µ –∫–Ω–æ–ø–∫–∞–º–∏ –∏–ª–∏ –∂–º–∏ /catalog, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã!",
        reply_markup=kb.main_kb,
    )
    await msg.answer(
        "–î–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 5-7 –¥–Ω–µ–π –ø–æ –†–æ—Å—Å–∏–∏!\n"
        "–û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π –∏–ª–∏ –Ω–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏"
    )


@router.message(Command("catalog"))
@router.message(F.text.lower() == "–∫–∞—Ç–∞–ª–æ–≥")
async def catalog_handler(msg: Message):
    items = load_products()

    if not items:
        return await msg.answer("–ü–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.")

    admin_id = config.ADMIN_IDS[0]

    for idx, item in enumerate(items, 1):
        caption = f"<b>{item['name']}</b>\n–¶–µ–Ω–∞: {item['price']} ‚ÇΩ"

        order_kb = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="üõí –ó–∞–∫–∞–∑–∞—Ç—å",
                        url=f"tg://user?id={admin_id}",
                    )
                ]
            ]
        )

        await msg.answer_photo(
            item["photo"],
            caption=caption,
            reply_markup=order_kb,
        )

@router.message(Command("sale"))
@router.message(F.text.lower() == "–∞–∫—Ü–∏–∏")
async def sale_handler(msg: Message):
    sales = load_sales()
    if not sales:
        return await msg.answer("–°–µ–π—á–∞—Å –Ω–µ—Ç –∞–∫—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.")

    admin_id = config.ADMIN_IDS[0]

    for it in sales:
        kb = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="üõí –ó–∞–∫–∞–∑–∞—Ç—å",
                        url=f"tg://user?id={admin_id}",
                    )
                ]
            ]
        )
        caption = f"<b>{it['name']}</b>\n–¶–µ–Ω–∞: {it['price']} ‚ÇΩ"
        await msg.answer_photo(it["photo"], caption=caption, reply_markup=kb)


@router.message(F.text.lower() == "–Ω–∞—à –∫–∞–Ω–∞–ª")
async def channel_handler(msg: Message) -> None:
    await msg.answer("üîó –ù–∞—à Telegram-–∫–∞–Ω–∞–ª: \n" \
                    "https://t.me/tacosquad202420")


class AskQuestion(StatesGroup):
    waiting = State()

@router.message(F.text.lower() == "–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
async def ask_question(msg: Message, state: FSMContext):
    await msg.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ:")
    await state.set_state(AskQuestion.waiting)

@router.message(AskQuestion.waiting)
async def receive_question(msg: Message, state: FSMContext):
    await state.clear()

    for admin_id in config.ADMIN_IDS:
        await msg.bot.send_message(
            admin_id,
            (
                f"‚ùì –í–æ–ø—Ä–æ—Å –æ—Ç {msg.from_user.full_name} "
                f"(id: <code>{msg.from_user.id}</code>):\n\n"
                f"{msg.text}\n\n"
                "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—ã—á–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º ‚Äî –æ–Ω–æ —É–π–¥—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"
            ),
            parse_mode="HTML",
            )

    await msg.answer("–í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.")